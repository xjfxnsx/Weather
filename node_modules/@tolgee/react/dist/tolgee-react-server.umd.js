(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('@tolgee/web')) :
    typeof define === 'function' && define.amd ? define(['exports', 'react', '@tolgee/web'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global["@tolgee/react"] = {}, global.React, global["@tolgee/web"]));
})(this, (function (exports, React, web) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

    function unwrapSingleElementArray(value) {
        if (Array.isArray(value) && value.length === 1) {
            return value[0];
        }
        else {
            return value;
        }
    }
    const wrapTagHandlers = (params) => {
        if (!params) {
            return undefined;
        }
        const result = {};
        Object.entries(params || {}).forEach(([key, value]) => {
            if (typeof value === 'function') {
                result[key] = (chunk) => {
                    return value(addReactKeys(chunk));
                };
            }
            else if (React__default["default"].isValidElement(value)) {
                const el = value;
                result[key] = (chunk) => {
                    return el.props.children === undefined && (chunk === null || chunk === void 0 ? void 0 : chunk.length)
                        ? React__default["default"].cloneElement(el, {}, addReactKeys(chunk))
                        : React__default["default"].cloneElement(el);
                };
            }
            else {
                result[key] = value;
            }
        });
        return result;
    };
    const addReactKeys = (children) => {
        const val = unwrapSingleElementArray(children);
        if (Array.isArray(val)) {
            return val.map((item, i) => (React__default["default"].createElement(React__default["default"].Fragment, { key: i }, item)));
        }
        else {
            return val;
        }
    };

    const TBase = (props) => {
        const key = props.keyName || props.children;
        if (key === undefined) {
            // eslint-disable-next-line no-console
            console.error('T component: keyName not defined');
        }
        const defaultValue = props.defaultValue ||
            (props.keyName ? props.children : undefined);
        const translation = addReactKeys(props.t({
            key: key,
            params: wrapTagHandlers(props.params),
            defaultValue,
            noWrap: props.noWrap,
            ns: props.ns,
            language: props.language,
        }));
        return React__default["default"].createElement(React__default["default"].Fragment, null, translation);
    };

    // @ts-ignore
    const createServerInstance = ({ createTolgee, getLocale, }) => {
        const getTolgeeInstance = React.cache(async (locale) => {
            const tolgee = await createTolgee(locale);
            await tolgee.run();
            return tolgee;
        });
        const getTolgee = async () => {
            const locale = await getLocale();
            const tolgee = await getTolgeeInstance(locale);
            return tolgee;
        };
        const getTranslate = async () => {
            const tolgee = await getTolgee();
            return tolgee.t;
        };
        async function T(props) {
            const t = await getTranslate();
            return React__default["default"].createElement(TBase, Object.assign({ t: t }, props));
        }
        return { getTolgeeInstance, getTolgee, getTranslate, T };
    };

    exports.TBase = TBase;
    exports.createServerInstance = createServerInstance;
    Object.keys(web).forEach(function (k) {
        if (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {
            enumerable: true,
            get: function () { return web[k]; }
        });
    });

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=tolgee-react-server.umd.js.map
