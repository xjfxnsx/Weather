import React from 'react';
import { TolgeeInstance, TolgeeStaticData } from '@tolgee/web';
import { ReactOptions, TolgeeReactContext } from './types';
export declare const DEFAULT_REACT_OPTIONS: ReactOptions;
export declare const getProviderInstance: () => React.Context<TolgeeReactContext | undefined>;
export type SSROptions = {
    /**
     * Hard set language to this value, use together with `staticData`
     */
    language?: string;
    /**
     * If provided, static data will be hard set to Tolgee cache for initial render
     */
    staticData?: TolgeeStaticData;
};
export interface TolgeeProviderProps {
    children?: React.ReactNode;
    tolgee: TolgeeInstance;
    options?: ReactOptions;
    fallback?: React.ReactNode;
    /**
     * use this option if you use SSR
     *
     * You can pass staticData and language
     * which will be set to tolgee instance for the initial render
     *
     * Don't switch between ssr and non-ssr dynamically
     */
    ssr?: SSROptions | boolean;
}
export declare const TolgeeProvider: React.FC<TolgeeProviderProps>;
