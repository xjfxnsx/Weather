import e,{cache as t}from"react";export*from"@tolgee/web";const n=t=>{if(!t)return;const n={};return Object.entries(t||{}).forEach((([t,r])=>{if("function"==typeof r)n[t]=e=>r(a(e));else if(e.isValidElement(r)){const o=r;n[t]=t=>void 0===o.props.children&&(null==t?void 0:t.length)?e.cloneElement(o,{},a(t)):e.cloneElement(o)}else n[t]=r})),n},a=t=>{const n=(a=t,Array.isArray(a)&&1===a.length?a[0]:a);var a;return Array.isArray(n)?n.map(((t,n)=>e.createElement(e.Fragment,{key:n},t))):n},r=t=>{const r=t.keyName||t.children;void 0===r&&console.error("T component: keyName not defined");const o=t.defaultValue||(t.keyName?t.children:void 0),c=a(t.t({key:r,params:n(t.params),defaultValue:o,noWrap:t.noWrap,ns:t.ns,language:t.language}));return e.createElement(e.Fragment,null,c)},o=({createTolgee:n,getLocale:a})=>{const o=t((async e=>{const t=await n(e);return await t.run(),t})),c=async()=>{const e=await a();return await o(e)},l=async()=>(await c()).t;return{getTolgeeInstance:o,getTolgee:c,getTranslate:l,T:async function(t){const n=await l();return e.createElement(r,Object.assign({t:n},t))}}};export{r as TBase,o as createServerInstance};
//# sourceMappingURL=tolgee-react-server.esm.min.js.map
