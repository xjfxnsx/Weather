import e,{useState as t,useEffect as n,useMemo as r,Suspense as o,useContext as s,useCallback as a,useRef as c}from"react";import{getTranslateProps as i,getFallback as l,getFallbackArray as u}from"@tolgee/web";export*from"@tolgee/web";function d(e,o,s,a=!0){const[c]=t((()=>{return t=e,Object.assign(Object.assign({},t),{t(...e){const n=i(...e);return t.t(Object.assign(Object.assign({},n),{noWrap:!0}))}});var t})),[l,u]=t(a);return n((()=>{u(!1)}),[]),r((()=>{a&&(e.setEmitterActive(!1),e.addStaticData(s),e.changeLanguage(o),e.setEmitterActive(!0))}),[o,s,e]),t((()=>{if(!e.isLoaded()&&a){const t=e.getRequiredRecords(o).map((({namespace:e,language:t})=>e?`${e}:${t}`:t)).filter((e=>!(null==s?void 0:s[e])));console.warn(`Tolgee: Missing records in "staticData" for proper SSR functionality: ${t.map((e=>`"${e}"`)).join(", ")}`)}})),l?c:e}const g={useSuspense:!0};let p;const m=()=>(p||(p=e.createContext(void 0)),p);let b;const f=({tolgee:r,options:s,children:a,fallback:c,ssr:i})=>{n((()=>{(null==b?void 0:b.run)!==r.run&&(b&&b.stop(),b=r,r.run().catch((e=>{console.error(e)})).finally((()=>{v(!1)})))}),[r]);let l=r;const{language:u,staticData:p}="object"!=typeof i?{}:i;l=d(r,u,p,Boolean(i));const[f,v]=t(!l.isLoaded()),j=Object.assign(Object.assign({},g),s),E=m();return j.useSuspense?e.createElement(E.Provider,{value:{tolgee:l,options:j}},f?c:e.createElement(o,{fallback:c||null},a)):e.createElement(E.Provider,{value:{tolgee:l,options:j}},f?c:a)};let v;const j=e=>t=>(v={tolgee:t,options:Object.assign(Object.assign({},g),e)},t);const E=()=>{const e=m(),t=s(e)||v;if(!t)throw new Error("Couldn't find tolgee instance, did you forgot to use `TolgeeProvider`?");return t},h=()=>{const[e,n]=t(0);return{instance:e,rerender:a((()=>{n((e=>e+1))}),[n])}},y=(e,t)=>{const{tolgee:r,options:o}=E(),s=l(e),i=u(s).join(":"),d=Object.assign(Object.assign({},o),t),{rerender:g,instance:p}=h(),m=c(),b=c([]);b.current=[];const f=r.isLoaded(s);n((()=>{const e=r.onNsUpdate(g);return m.current=e,e.subscribeNs(s),b.current.forEach((t=>{e.subscribeNs(t)})),()=>{e.unsubscribe()}}),[i,r]),n((()=>(r.addActiveNs(s),()=>r.removeActiveNs(s))),[i,r]);const v=a((e=>{var t;const n=null!==(t=e.ns)&&void 0!==t?t:null==s?void 0:s[0];return(e=>{var t;b.current.push(e),null===(t=m.current)||void 0===t||t.subscribeNs(e)})(n),r.t(Object.assign(Object.assign({},e),{ns:n}))}),[r,p]);if(d.useSuspense&&!f)throw r.addActiveNs(s,!0);return{t:v,isLoading:!f}},O=(e,t)=>{const{t:n,isLoading:r}=y(e,t);return{t:a(((...e)=>{const t=i(...e);return n(t)}),[n]),isLoading:r}};const N=t=>{if(!t)return;const n={};return Object.entries(t||{}).forEach((([t,r])=>{if("function"==typeof r)n[t]=e=>r(A(e));else if(e.isValidElement(r)){const o=r;n[t]=t=>void 0===o.props.children&&(null==t?void 0:t.length)?e.cloneElement(o,{},A(t)):e.cloneElement(o)}else n[t]=r})),n},A=t=>{const n=(r=t,Array.isArray(r)&&1===r.length?r[0]:r);var r;return Array.isArray(n)?n.map(((t,n)=>e.createElement(e.Fragment,{key:n},t))):n},k=t=>{const n=t.keyName||t.children;void 0===n&&console.error("T component: keyName not defined");const r=t.defaultValue||(t.keyName?t.children:void 0),o=A(t.t({key:n,params:N(t.params),defaultValue:r,noWrap:t.noWrap,ns:t.ns,language:t.language}));return e.createElement(e.Fragment,null,o)},L=t=>{const{t:n}=y();return e.createElement(k,Object.assign({t:n},t))},w=e=>{const{tolgee:t}=E(),{rerender:r}=h();return n((()=>{const n=null==e?void 0:e.map((e=>t.on(e,r)));return()=>{null==n||n.forEach((e=>e.unsubscribe()))}}),[null==e?void 0:e.join(":")]),t};export{j as GlobalContextPlugin,L as T,k as TBase,f as TolgeeProvider,m as getProviderInstance,w as useTolgee,d as useTolgeeSSR,O as useTranslate};
//# sourceMappingURL=tolgee-react.esm.min.mjs.map
